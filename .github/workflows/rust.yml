name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Test & code coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cms
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update -y && sudo apt-get install libpq-dev -y
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Cache sqlx
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('~/.cargo/bin/sqlx', '~/.cargo/bin/cargo-sqlx') }}
      - name: Install/Update sqlx
        run: cargo install sqlx-cli --no-default-features --features postgres || true

      # Database setup
      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Code coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--ignore-tests --output-dir coverage'
          out-type: 'Lcov'
      - name: Upload coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint with clippy
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cms
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Lint code
        run: SQLX_OFFLINE=true cargo clippy
